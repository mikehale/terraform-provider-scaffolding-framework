{
    "openapi": "3.0.0",
    "info": {
        "title": "American Cloud",
        "description": "American Cloud OpenAPI Documentation",
        "contact": {
            "email": "ops@americancloud.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.3.0"
    },
    "servers": [
        {
            "url": "https://app.americancloud.com/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/block-storage/create": {
            "post": {
                "tags": [
                    "Block Storage"
                ],
                "summary": "Create a new block storage",
                "description": "Returns block storage",
                "operationId": "storeBlockStorage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBlockStorageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        },
                                        "batch": {
                                            "$ref": "#/components/schemas/CreateBlockstorageSchema"
                                        },
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Creating block storage!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/block-storages": {
            "get": {
                "tags": [
                    "Block Storage"
                ],
                "summary": "Get list of block storage",
                "description": "Returns list of of block storage",
                "operationId": "listBlockStorage",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockStorageResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/block-storage/{block_storage}": {
            "get": {
                "tags": [
                    "Block Storage"
                ],
                "summary": "Get block storage by name",
                "description": "Returns block storage",
                "operationId": "showBlockStorage",
                "parameters": [
                    {
                        "name": "block_storage",
                        "in": "path",
                        "description": "Name of the block storage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockStorageSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Block Storage Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Block Storage"
                ],
                "summary": "Delete Block Storage",
                "description": "Delete block storage by name",
                "operationId": "destroyBlockStorage",
                "parameters": [
                    {
                        "name": "block_storage",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Deleting block storage!"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DeleteBlockStorageSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Block Storage Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/block-storage/detach/{block_storage}": {
            "put": {
                "tags": [
                    "Block Storage"
                ],
                "summary": "Detach Instance from Block Storage",
                "description": "Detach instance from the block storage",
                "operationId": "detachBlockStorage",
                "parameters": [
                    {
                        "name": "block_storage",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DetachBlockStorageSchema"
                                        },
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Detaching instance from the block storage!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Block Storage Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/block-storage/attach/{block_storage}": {
            "put": {
                "tags": [
                    "Block Storage"
                ],
                "summary": "Attach Instance to the Block Storage",
                "description": "Attach instance to the block storage by instance name",
                "operationId": "attachBlockStorage",
                "parameters": [
                    {
                        "name": "block_storage",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachBlockStorageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AttachBlockStorageSchema"
                                        },
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Attaching instance from the block storage!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Block Storage Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/firewalls/{ip_address}": {
            "get": {
                "tags": [
                    "Firewall"
                ],
                "summary": "List of Firewall Rules",
                "description": "Returns list of Firewall Rules",
                "operationId": "listFirewall",
                "parameters": [
                    {
                        "name": "ip_address",
                        "in": "path",
                        "description": "the ip address of the firewall rules",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FirewallResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Firewall"
                ],
                "summary": "Destroy Firewall Rules",
                "description": "Returns Destroy Firewall",
                "operationId": "destroyFirewall",
                "parameters": [
                    {
                        "name": "ip_address",
                        "in": "path",
                        "description": "The ip address of the firewall rule.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Deleting Firewall Rule !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/firewalls": {
            "post": {
                "tags": [
                    "Firewall"
                ],
                "summary": "Create a new Firewall Rule",
                "description": "Returns Firewall Rule",
                "operationId": "createFirewall",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFirewallRuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Creating Firewall rule !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/port-forwarding": {
            "post": {
                "tags": [
                    "Firewall"
                ],
                "summary": "Create a new Port Forwarding Rule",
                "description": "Returns Port Forwarding Rule",
                "operationId": "createPortForwarding",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePortForwardingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Creating Port Forwarding rule !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/port-forwarding/{ip_address}": {
            "get": {
                "tags": [
                    "Firewall"
                ],
                "summary": "List of Port Forwarding Rules",
                "description": "Returns list of Port Forwarding Rules",
                "operationId": "listPortForwarding",
                "parameters": [
                    {
                        "name": "ip_address",
                        "in": "path",
                        "description": "The ip address of the instance associated with port forwarding rule",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PortForwardingResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Firewall"
                ],
                "summary": "Destroy Port Forwarding Rules",
                "description": "Returns Destroy Port Forwarding",
                "operationId": "destroyPortForwarding",
                "parameters": [
                    {
                        "name": "ip_address",
                        "in": "path",
                        "description": "The ip address of the port forwarding rule",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Deleting Port Forwarding Rule!"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/network/egress_rule/{network}": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Create a Egress Rule",
                "description": "Returns ACL List",
                "operationId": "addEgressRule",
                "parameters": [
                    {
                        "name": "network",
                        "in": "path",
                        "description": "Name of the Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEgressRuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        },
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Egress rule created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete a Egress Rule",
                "description": "Returns Egress Rule",
                "operationId": "deleteRule",
                "parameters": [
                    {
                        "name": "network",
                        "in": "path",
                        "description": "Name of the Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteEgressRuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Deleting Egress Rule !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/cluster/create": {
            "post": {
                "tags": [
                    "Kubernetes"
                ],
                "summary": "Create a new Kubernetes",
                "description": "Returns Kubernetes",
                "operationId": "storeKubernetes",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateKubernetesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Creating kubernetes cluster"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CreateKubernetesSchema"
                                        },
                                        "batch": {
                                            "$ref": "#/components/schemas/KubernetesBatchSchema"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/clusters/{project}": {
            "get": {
                "tags": [
                    "Kubernetes"
                ],
                "summary": "Get list of Kubernetes",
                "description": "Returns list of Kubernetes",
                "operationId": "listKubernetes",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "description": "The name of the project",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/cluster/{kubernetes}": {
            "get": {
                "tags": [
                    "Kubernetes"
                ],
                "summary": "Get Kubernetes",
                "description": "Returns Kubernetes",
                "operationId": "showKubernetes",
                "parameters": [
                    {
                        "name": "kubernetes",
                        "in": "path",
                        "description": "The name of the kubernetes cluster",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/clusters/{kubernetes}": {
            "delete": {
                "tags": [
                    "Kubernetes"
                ],
                "summary": "Delete Kubernetes",
                "description": "Returns Kubernetes",
                "operationId": "destroyKubernetes",
                "parameters": [
                    {
                        "name": "kubernetes",
                        "in": "path",
                        "description": "The name of the kubernetes cluster",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Deleting kubernetes cluster!"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DeleteKubernetesSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/cluster/upgrade/{kubernetes}": {
            "post": {
                "tags": [
                    "Kubernetes"
                ],
                "summary": "Update a kubernetes",
                "description": "Returns Kubernetes",
                "operationId": "upgradeCluster",
                "parameters": [
                    {
                        "name": "kubernetes",
                        "in": "path",
                        "description": "The name of the kubernetes cluster",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpgradeKubernetesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Upgrading Kubernetes Cluster !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/cluster/stop/{kubernetes}": {
            "post": {
                "tags": [
                    "Kubernetes"
                ],
                "summary": "Stop Kubernetes",
                "description": "Returns Kubernetes",
                "operationId": "stopKubernetes",
                "parameters": [
                    {
                        "name": "kubernetes",
                        "in": "path",
                        "description": "The name of the kubernetes cluster",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Stoping Kubernetes Cluster!"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/clusters/start/{kubernetes}": {
            "post": {
                "tags": [
                    "Kubernetes"
                ],
                "summary": "Start Kubernetes",
                "description": "Returns Kubernetes",
                "operationId": "startKubernetes",
                "parameters": [
                    {
                        "name": "kubernetes",
                        "in": "path",
                        "description": "The name of the kubernetes cluster",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Starting Kubernetes Cluster!"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/cluster/config/{kubernetes}": {
            "get": {
                "tags": [
                    "Kubernetes"
                ],
                "summary": "Get Config Kubernetes",
                "description": "Returns Config Kubernetes",
                "operationId": "configCluster",
                "parameters": [
                    {
                        "name": "kubernetes",
                        "in": "path",
                        "description": "The name of the kubernetes cluster",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KubernetesResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/cluster/scale/{kubernetes}": {
            "post": {
                "tags": [
                    "Kubernetes"
                ],
                "summary": "Create a Scale Cluster",
                "description": "Returns Scale Cluster",
                "operationId": "scaleCluster",
                "parameters": [
                    {
                        "name": "kubernetes",
                        "in": "path",
                        "description": "The name of the kubernetes cluster",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateScaleClusterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Creating a scale cluster!"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/load-balancer/create": {
            "post": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Create a new Load Balancer",
                "description": "Returns Load Balancer",
                "operationId": "load-balance-store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLoadBalancerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Creating Load Balancer!"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CreateLoadbalancerSchema"
                                        },
                                        "batch": {
                                            "$ref": "#/components/schemas/CreateLoadbalancerBatchSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/load-balancers/{project}": {
            "get": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Get list of Load Balancers",
                "description": "Returns list of Load Balancers",
                "operationId": "LoadBalancersList",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "The name of the project",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadBalancerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/load-balancers/{load_balancer}": {
            "get": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Get Load Balancer ",
                "description": "Returns Load Balancer",
                "operationId": "LoadBalancerShow",
                "parameters": [
                    {
                        "name": "load_balancer",
                        "in": "path",
                        "description": "The name of the load balancer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadBalancerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Update Load Balancer Config ",
                "description": "Returns Load Balancer Config",
                "operationId": "load-balacner-update",
                "parameters": [
                    {
                        "name": "load_balancer",
                        "in": "path",
                        "description": "The name of the load balancer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLoadBalancerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Updating Load Balancer Config !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Delete Load Balancer",
                "description": "Returns Load Balancer",
                "operationId": "destroyLoadBalancer",
                "parameters": [
                    {
                        "name": "load_balancer",
                        "in": "path",
                        "description": "The name of the load balancer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Deleting load balancer and rules!"
                                        },
                                        "batch": {
                                            "$ref": "#/components/schemas/CreateLoadbalancerBatchSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/load-balancer/rule/{load_balancer}": {
            "post": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Create Load Balancer Rule ",
                "description": "Returns Load Balancer Rule",
                "operationId": "addRule",
                "parameters": [
                    {
                        "name": "load_balancer",
                        "in": "path",
                        "description": "The name of the load balancer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddLoadBalancerRuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CreateLoadBalancerRuleSchema"
                                        },
                                        "batch": {
                                            "$ref": "#/components/schemas/CreateLoadbalancerBatchSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Load Balancer"
                ],
                "summary": "Remove Load Balancer Rule",
                "description": "Returns Load Balancer Rule",
                "operationId": "removeRule",
                "parameters": [
                    {
                        "name": "load_balancer",
                        "in": "path",
                        "description": "The name of the load balancer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveLoadBalancerRuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "headers": {
                                            "$ref": "#/components/schemas/RemoveLoadBalancerRuleSchema"
                                        },
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Load Balancer Rule is deleted Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/network/ip-address/{network}": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Create a Ip Address",
                "description": "Returns Ip Address",
                "operationId": "associateIpAddress",
                "parameters": [
                    {
                        "name": "network",
                        "in": "path",
                        "description": "Name of the Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateIpAddressRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Acquiring IP Address!"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        },
                                        "batch": {
                                            "$ref": "#/components/schemas/PublicIpAddressSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/network/enable-static-nat/{ip_address}": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Enable Static Nat",
                "description": "Returns Ip Address",
                "operationId": "enableStaticNat",
                "parameters": [
                    {
                        "name": "ip_address",
                        "in": "path",
                        "description": "IP Address Of The Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IpAddressStaticNatRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Static NAT successfully enabled!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/network/disable-static-nat/{ip_address}": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Disable Static Nat",
                "description": "Returns Ip Address",
                "operationId": "disableStaticNat",
                "parameters": [
                    {
                        "name": "ip_address",
                        "in": "path",
                        "description": "IP Address Of The Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Static NAT successfully disabled!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/network/ip-address/{ip_address}": {
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Delete a Ip Address",
                "description": "Returns Ip Address",
                "operationId": "disassociateIpAddress",
                "parameters": [
                    {
                        "name": "ip_address",
                        "in": "path",
                        "description": "IP Address of the Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Deleting Public IP Address !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/network/create": {
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Create a new Network",
                "description": "Returns Network",
                "operationId": "storeNetwork",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateNetworkRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Network Created Successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NetworkSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/network/{network}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get Network ",
                "description": "Returns network",
                "operationId": "networkShow",
                "parameters": [
                    {
                        "name": "network",
                        "in": "path",
                        "description": "The name of the network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Network"
                ],
                "summary": "Destroy Network",
                "description": "Returns Network",
                "operationId": "destroyNetwork",
                "parameters": [
                    {
                        "name": "network",
                        "in": "path",
                        "description": "The name of the network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Deleting Network !"
                                        },
                                        "batch": {
                                            "$ref": "#/components/schemas/DeleteNetworkSchema"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/networks/{project}": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get list of networks",
                "description": "Returns list of networks",
                "operationId": "networkList",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "The name of the project",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/project/create": {
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Create a new project",
                "description": "Returns project",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Project created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/project/{project}": {
            "put": {
                "tags": [
                    "Project"
                ],
                "summary": "Update existing project",
                "description": "Returns updated project",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Project updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ProjectSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/projects": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get list of projects",
                "description": "Returns list of projects",
                "operationId": "listProjects",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/snapshot/create/{block_storage}": {
            "post": {
                "tags": [
                    "Snapshot"
                ],
                "summary": "Create a Snapshot",
                "description": "Returns Snapshot",
                "operationId": "createSnapshot",
                "parameters": [
                    {
                        "name": "block_storage",
                        "in": "path",
                        "description": "Name of the block storage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSnapshotRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Creating Snapshot !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/snapshots/{block_storage}/{project}": {
            "get": {
                "tags": [
                    "Snapshot"
                ],
                "summary": "Get list of snapshots",
                "description": "Returns list of snapshots",
                "operationId": "listSnapshot",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Name of the project",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "block_storage",
                        "in": "path",
                        "description": "Name of the block storage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SnapshotResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/snapshot/{snapshot}": {
            "get": {
                "tags": [
                    "Snapshot"
                ],
                "summary": "Get list of snapshot",
                "description": "Returns list of snapshot",
                "operationId": "showSnapshot",
                "parameters": [
                    {
                        "name": "snapshot",
                        "in": "path",
                        "description": "Name of the snapshot",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SnapshotResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Snapshot"
                ],
                "summary": "Get list of snapshot",
                "description": "Returns list of snapshot",
                "operationId": "destroySnapshot",
                "parameters": [
                    {
                        "name": "snapshot",
                        "in": "path",
                        "description": "Name of the snapshot",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Destroying Snapshot"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/snapshot/revert/{snapshot}": {
            "put": {
                "tags": [
                    "Snapshot"
                ],
                "summary": "Revert snapshot",
                "description": "Returns snapshot",
                "operationId": "revertSnapshot",
                "parameters": [
                    {
                        "name": "snapshot",
                        "in": "path",
                        "description": "Name of the snapshot",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Reverting Snapshot !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/vpc/create/acl_list/{vpc}": {
            "post": {
                "tags": [
                    "Vpc"
                ],
                "summary": "Create a ACL List",
                "description": "Returns ACL List",
                "operationId": "createAclList",
                "parameters": [
                    {
                        "name": "vpc",
                        "in": "path",
                        "description": "Name of the Vpc",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Creating ACL List !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/vpc/update/{vpc}/{acl_name}": {
            "put": {
                "tags": [
                    "Vpc"
                ],
                "summary": "Update a ACL List",
                "description": "Returns ACL List",
                "operationId": "updateAclList",
                "parameters": [
                    {
                        "name": "vpc",
                        "in": "path",
                        "description": "Name of the Vpc",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "acl_name",
                        "in": "path",
                        "description": "Name of the ACL List",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateACLListRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Updating ACL List !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/vpc/acl_list/{vpc}/{acl_name}": {
            "delete": {
                "tags": [
                    "Vpc"
                ],
                "summary": "Delete a ACL List",
                "description": "Returns ACL List",
                "operationId": "deleteAclList",
                "parameters": [
                    {
                        "name": "vpc",
                        "in": "path",
                        "description": "Name of the Vpc",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "acl_name",
                        "in": "path",
                        "description": "Name of the ACL List",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Deleting ACL List !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/vpc/acl_list/{vpc}": {
            "get": {
                "tags": [
                    "Vpc"
                ],
                "summary": "Acl List",
                "description": "Returns Acl List",
                "operationId": "listAclList",
                "parameters": [
                    {
                        "name": "vpc",
                        "in": "path",
                        "description": "Name of the Vpc",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/vpc/create/acl_rule/{vpc}": {
            "post": {
                "tags": [
                    "Vpc"
                ],
                "summary": "Create Acl Rule",
                "description": "Returns Acl Rule",
                "operationId": "createAcl",
                "parameters": [
                    {
                        "name": "vpc",
                        "in": "path",
                        "description": "Name of the Vpc",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "My-VPC"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateACLListRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Creating ACL Rule !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/vpc/create": {
            "post": {
                "tags": [
                    "Vpc"
                ],
                "summary": "Create a new VPC",
                "description": "Returns VPC",
                "operationId": "vpc-store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateVpcRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/VpcSchema"
                                        },
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "VPC Created Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/vpc/{vpc}": {
            "get": {
                "tags": [
                    "Vpc"
                ],
                "summary": "Get vpc ",
                "description": "Returns vpc",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "vpc",
                        "in": "path",
                        "description": "The name of the vpc",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vpc"
                ],
                "summary": "Destroy vpc ",
                "description": "Returns vpc",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "vpc",
                        "in": "path",
                        "description": "The name of the vpc",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Vpc Destroyed successfully"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        },
                                        "batch": {
                                            "$ref": "#/components/schemas/DeleteVpcSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/vpcs/{project}": {
            "get": {
                "tags": [
                    "Vpc"
                ],
                "summary": "Get list of vpcs",
                "description": "Returns list of vpcs",
                "operationId": "list",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "The name of the project",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VpcResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/instance/create": {
            "post": {
                "tags": [
                    "Virtual Machine"
                ],
                "summary": "Create a new Virtual Machine",
                "description": "Returns Virtual Machine",
                "operationId": "storeInstance",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateInstanceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Creating Virtual Machine !"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        },
                                        "batch": {
                                            "$ref": "#/components/schemas/InstanceSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/instances/{project}": {
            "get": {
                "tags": [
                    "Virtual Machine"
                ],
                "summary": "Get list of Virtual machines",
                "description": "Returns list of Virtual machines",
                "operationId": "instancesList",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "The name of the project",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstanceResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/instance/{instance}": {
            "get": {
                "tags": [
                    "Virtual Machine"
                ],
                "summary": "Get Virtual machine",
                "description": "Returns Virtual machine",
                "operationId": "instancesShow",
                "parameters": [
                    {
                        "name": "instance",
                        "in": "path",
                        "description": "The name of the virtual machine",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstanceResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Virtual Machine"
                ],
                "summary": "Delete Virtual Machine",
                "description": "Returns Virtual Machine",
                "operationId": "instanceDestroy",
                "parameters": [
                    {
                        "name": "instance",
                        "in": "path",
                        "description": "The name of the virtual machine",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DeleteInstanceSchema"
                                        },
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Deleting Instance!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/instance/templates": {
            "get": {
                "tags": [
                    "Virtual Machine"
                ],
                "summary": "Get Virtual machine templates",
                "description": "Returns Virtual machine templates",
                "operationId": "instancesTemplate",
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/instance/offerings": {
            "get": {
                "tags": [
                    "Virtual Machine"
                ],
                "summary": "Get Virtual Machine Offerings",
                "description": "Returns Virtual Machine Offerings",
                "operationId": "instancesOfferings",
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/instance/stop/{instance}": {
            "post": {
                "tags": [
                    "Virtual Machine"
                ],
                "summary": "Stop Virtual Machine",
                "description": "Returns Virtual Machine",
                "operationId": "stop",
                "parameters": [
                    {
                        "name": "instance",
                        "in": "path",
                        "description": "The name of the virtual machine",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Stopping Virtual Machine !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/instance/start/{instance}": {
            "post": {
                "tags": [
                    "Virtual Machine"
                ],
                "summary": "Start Virtual Machine",
                "description": "Returns Virtual Machine",
                "operationId": "start",
                "parameters": [
                    {
                        "name": "instance",
                        "in": "path",
                        "description": "The name of the virtual machine",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Starting Virtual Machine !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/instance/reboot/{instance}": {
            "post": {
                "tags": [
                    "Virtual Machine"
                ],
                "summary": "Reboot Virtual Machine",
                "description": "Returns Virtual Machine",
                "operationId": "reboot",
                "parameters": [
                    {
                        "name": "instance",
                        "in": "path",
                        "description": "The name of the virtual machine",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Rebooting Virtual Machine !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/instance/reinstall/{instance}": {
            "post": {
                "tags": [
                    "Virtual Machine"
                ],
                "summary": "Reinstall Virtual Machine",
                "description": "Returns Virtual Machine",
                "operationId": "reinstall",
                "parameters": [
                    {
                        "name": "instance",
                        "in": "path",
                        "description": "The name of the virtual machine",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Reinstall Virtual Machine !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/instance/change-hostname/{instance}": {
            "post": {
                "tags": [
                    "Virtual Machine"
                ],
                "summary": "Update Virtual Machine Hostname",
                "description": "Returns Virtual Machine Hostname",
                "operationId": "changeHostname",
                "parameters": [
                    {
                        "name": "instance",
                        "in": "path",
                        "description": "The name of the virtual machine",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeInstanceHostnameRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Updating Virtual Machine Hostname!"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/instance/reset-password/{instance}": {
            "post": {
                "tags": [
                    "Virtual Machine"
                ],
                "summary": "Reset Virtual Machine Password",
                "description": "Returns Virtual Machine",
                "operationId": "resetPassword",
                "parameters": [
                    {
                        "name": "instance",
                        "in": "path",
                        "description": "The name of the virtual machine",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Ok",
                                            "type": "string",
                                            "example": "Reseting Virtual Machine Password !"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/AsyncJobSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Access Denied"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AddLoadBalancerRuleRequest": {
                "title": "Store Load Balancer Rule Request",
                "description": "Store Load Balancer rule request body",
                "required": [
                    "rules"
                ],
                "properties": {
                    "rules": {
                        "title": "rules",
                        "description": "",
                        "type": "string",
                        "example": "[{ public_port:80, private_port:80 }]"
                    }
                },
                "type": "object"
            },
            "AttachBlockStorageRequest": {
                "title": "Attach instance to the block storage Request",
                "description": "Attach instance to the block storage request body",
                "required": [
                    "instance"
                ],
                "properties": {
                    "instance": {
                        "title": "instance",
                        "description": "Attach instance to the block storage by instance name",
                        "type": "string",
                        "example": "Test-VM"
                    }
                },
                "type": "object"
            },
            "ChangeInstanceHostnameRequest": {
                "title": "Change Instance Hostname Request",
                "description": "Change instance hostname request body",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "host name (in url) of the virtual machine",
                        "type": "string",
                        "example": "New Hostname"
                    }
                },
                "type": "object"
            },
            "ChangeStartupScriptRequest": {
                "title": "Change Instance Startup script Request",
                "description": "Change instance Startup script request body",
                "required": [
                    "user_data"
                ],
                "properties": {
                    "user_data": {
                        "title": "user_data",
                        "description": "Startup script data for virtual machine",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "CreateACLListRequest": {
                "title": "Create ACL List Request",
                "description": "Create ACL List request body",
                "required": [
                    "name",
                    "description"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "ACL List Name",
                        "type": "string",
                        "format": "string",
                        "example": "Example"
                    },
                    "description": {
                        "title": "description",
                        "description": "ACL List Description",
                        "type": "string",
                        "format": "string",
                        "example": "Description"
                    }
                },
                "type": "object"
            },
            "CreateBlockStorageRequest": {
                "title": "Create Block Storage Request",
                "description": "Store block storage request body",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the block storage",
                        "type": "string",
                        "example": "My Block Storage"
                    },
                    "project": {
                        "title": "project",
                        "description": "Name of the project",
                        "type": "string",
                        "example": "A nice project"
                    },
                    "instance": {
                        "title": "instance",
                        "description": "Name of the Instance under the given project",
                        "type": "string",
                        "format": "string",
                        "example": "vm-01"
                    },
                    "package": {
                        "title": "package",
                        "description": "Name of the package with storage size",
                        "type": "string",
                        "example": "V50"
                    },
                    "zone": {
                        "title": "Zone",
                        "description": "The name of the zone under which the service should be created.",
                        "type": "string",
                        "example": "Zone0"
                    },
                    "billing_period": {
                        "title": "billing_period",
                        "description": "Billing period for the block storage",
                        "type": "string",
                        "example": "Monthly"
                    }
                },
                "type": "object"
            },
            "CreateEgressRuleRequest": {
                "title": "Create Egress Rule Request",
                "description": "Create Egress Rule request body",
                "required": [
                    "cidr_list",
                    "dest_cidr_list",
                    "protocol"
                ],
                "properties": {
                    "cidr_list": {
                        "title": "cidr_list",
                        "description": "CIDR of a egress rule",
                        "type": "string",
                        "format": "string",
                        "example": "10.0.0.0/0"
                    },
                    "dest_cidr_list": {
                        "title": "dest_cidr_list",
                        "description": "DIST CIDR",
                        "type": "string",
                        "format": "string",
                        "example": "10.0.0.0/0"
                    },
                    "protocol": {
                        "title": "protocol",
                        "description": "tcp, udp or icmp.",
                        "type": "string",
                        "format": "string",
                        "example": "tcp"
                    },
                    "start_port": {
                        "title": "start_port",
                        "description": "start port",
                        "type": "string",
                        "format": "string",
                        "example": "80"
                    },
                    "end_port": {
                        "title": "end_port",
                        "description": "end port",
                        "type": "string",
                        "format": "string",
                        "example": "80"
                    },
                    "icmp_type": {
                        "title": "icmp_type",
                        "description": "icmp_type",
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "icmp_code": {
                        "title": "icmp_code",
                        "description": "icmp_code",
                        "type": "string",
                        "format": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "CreateFirewallRuleRequest": {
                "title": "Create Firewall Request",
                "description": "Store Firewall request body",
                "required": [
                    "ip",
                    "cidr",
                    "protocol",
                    "start_port",
                    "end_port"
                ],
                "properties": {
                    "ip": {
                        "title": "ip",
                        "description": "the IP address of the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "14.192.19.212"
                    },
                    "cidr": {
                        "title": "cidr",
                        "description": "The cidr of the new firewall rule",
                        "type": "string",
                        "format": "string",
                        "example": "0.0.0.0/0"
                    },
                    "protocol": {
                        "title": "protocol",
                        "description": "The protocol for the firewall rule. Valid values are tcp , udp and icmp.",
                        "type": "string",
                        "format": "enum",
                        "example": "tcp"
                    },
                    "start_port": {
                        "title": "start_port",
                        "description": "The starting port of firewall rule",
                        "type": "string",
                        "format": "integer",
                        "example": "80"
                    },
                    "end_port": {
                        "title": "end_port",
                        "description": "The ending port of firewall rule",
                        "type": "string",
                        "format": "enum",
                        "example": "80"
                    },
                    "icmp_code": {
                        "title": "icmp_code",
                        "description": "Error code for this ICMP message",
                        "type": "string",
                        "example": ""
                    },
                    "icmp_type": {
                        "title": "icmp_type",
                        "description": "Type of the ICMP message being sent",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "CreateInstanceRequest": {
                "title": "Create Instance Request",
                "description": "Store Instance request body",
                "required": [
                    "template",
                    "project",
                    "zone",
                    "network",
                    "name",
                    "billing_period"
                ],
                "properties": {
                    "template": {
                        "title": "template",
                        "description": "the name of the template for the virtual machine. Format os_name/version",
                        "type": "string",
                        "format": "string",
                        "example": "Ubuntu/20.04 LTS (Focal)"
                    },
                    "project": {
                        "title": "project",
                        "description": "The name of the project under which the service should be created.",
                        "type": "string",
                        "format": "string",
                        "example": "Test-Project-001"
                    },
                    "zone": {
                        "title": "zone",
                        "description": "The name of the zone under which the service should be created.",
                        "type": "string",
                        "format": "string",
                        "example": "Zone0"
                    },
                    "network": {
                        "title": "network",
                        "description": "The name of the network (Isolated/Vpc) under which the service should be created.",
                        "type": "string",
                        "format": "string",
                        "example": "default-isolated-network-zone-aead"
                    },
                    "is_public_ip": {
                        "title": "is_public_ip",
                        "description": "create virtual machine with public or private IP. Default true",
                        "type": "string",
                        "format": "string",
                        "example": "159.125.12.0"
                    },
                    "package": {
                        "title": "package",
                        "description": "the package name of the service offering for the virtual machine. Mutually Exclusive with custom_package",
                        "type": "string",
                        "format": "string",
                        "example": "Example-1"
                    },
                    "custom_package": {
                        "title": "custom_package",
                        "description": "create virtual machine with custom package",
                        "type": "string",
                        "format": "json",
                        "example": "{ ram: 2, cpu: 4, storage: 60 }"
                    },
                    "name": {
                        "title": "name",
                        "description": "host name for the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "Test-VM"
                    },
                    "billing_period": {
                        "title": "billing_period",
                        "description": "hourly, monthly or yearly",
                        "type": "string",
                        "format": "enum",
                        "example": "monthly"
                    },
                    "keypair": {
                        "title": "keypair",
                        "description": "SSH key pair",
                        "type": "string",
                        "format": "string",
                        "example": "MIIEpAIBAAKCAQEAznj3aGf8R113n3eCte9j2DwbVLYUzPUSPUy1sDO475BHN5yfDI5Wf79BEF2b1fMA5pz63HGDQfo6qVu12hYxaz39xXbsY/ntjK/xWGdEhTyyh33G1C0rlfJMhWR4GN7z4VGkY1ud52hiJWyRyHDPP/9eCWmJtfHM1gWUtCDnZ5rzJuH3U6ls5WEzNdotzRMHwF0zfHBaktfb48Q2drLEBKCELstKpySa7gvu+39NihBbJ7kx4m00JBEbPQgROfYCFh3zr17M6u5FxdUJvTaUfaJyKKy2nqu6UhZ0+RvsYxnvScNRiWhn3VbJ1/lCG+jOMd3P+2wIDAQABAoIBAQCEv5GSNwkkeRuoE5aejY4Mgar4jelV+ZzL+Hp7PtFg6vr+sU3VFKcbyTAIesn/jLkR7+lcrnKY+UFsa8qllNT2Eej69Y7fRN2nD45zSmUA9oIjXAFvDlXtU2AvH2sT1m+oSwcxCQev3HXy8DRZURj/UuQtLQli6BPVvhpFS7IrmWU5NiacgUUirCJoscwdV1iV85Y5ES5rFg9P8xeoJ+N6ZMKw9HO7tHIpLGSUlGDTmtlStBYqX+dpq4tMyFGwNtOMklu8BBrdfo176AX41zt9d/seVeE/FIYaDjIwMYVyvzGvZRJQrpYqjn52gc9AaxSksDMySB1+YHervzFfdvvBAoGBAOyrOF22CerGyqWQ8NsYKi1pw6M2DsiM9qaZbZ05Q7rX1MyH9Y74xjtmBp6h3+ARvRdopXa3dpG5dFHRwihQoZ0DC3yAg85o8Vey+msC6YtA6ifhiBArTqfZTBg+EAm0NT0oGwwZurCTPDEDV/jOxJZ3oekIhU23asIRfVYe1tr3AoGBAN9WVk46OV8aTM9nH3Q+zhoH7iyiOLlzyQjnAEnz9YgvA/0VnHuD3rPlwcb765f4A/JvMwKa4Pq8yMxnv9BF4nBBXSeGPdVvNG832b2Urkcj6XDQgQwBpGzQ0OjYxgPp/TNzYKuHDKbrwifXW5z2CUCuxd9VnQvaOu+nyHTcFj49AoGAe0E0isFqasX69b0FYuUz2hDR3Wcizdlz/xG6n34aQu1yms5X2YzAGGErI2RkZpp2YwGR4sDrVDtEU/Qs7LgJYu8aBU4c1tuajTTd6+tJW8eD6x8usFUNkqa9VYbE7XjXnTEM3QFtU9ZqK5B1OVPd2AsX3HgejHnwdH+NSdOny8MCgYAlRIryUtTwAbt/gH3HMBPEVD5yRD+i8qdBTQrHTGZUa0QHH2wVUFQBQP2s7qzJlyFReyzP6nhQXuBC+60OXBsFEGMzDTuUOhJN3MwAzqamSF/T63cdQcjmP5IcyM+CJ7GQvFgNR2PdFso3S8CF2KiCmqd6NRcXuzrKcv0IQxGTIQKBgQC9sIEYz1awG2/R/h+mh6YfClUbvhb5GcQI8b7uOI95XXitVSAwo9f/HWoRL1VhW2AQsKJNkPrxp8VdiLiDcCHBolFDTzbqgoZE0Ue3VPz1oXhv32kMUsl693BzXgF4FVblDkO1aSXg0JC78lBLa8gtfp6UaZrkwmvUw7r6R6TKbw=="
                    },
                    "user_data": {
                        "title": "user_data",
                        "description": "an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 4KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 1MB of data after base64 encoding.",
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "coupon_code": {
                        "title": "coupon_code",
                        "description": "The coupon code",
                        "type": "string",
                        "format": "string",
                        "example": "COUPON-NAME"
                    }
                },
                "type": "object"
            },
            "CreateIpAddressRequest": {
                "title": "Create IP Address Request",
                "description": "Create IP Address request body",
                "required": [
                    "billing_period"
                ],
                "properties": {
                    "billing_period": {
                        "title": "billing_period",
                        "description": "billing period",
                        "type": "string",
                        "format": "enum",
                        "example": "monthly"
                    }
                },
                "type": "object"
            },
            "CreateKubernetesRequest": {
                "title": "Create Kubernetes Request",
                "description": "Store Kubernetes request body",
                "required": [
                    "name",
                    "project",
                    "version",
                    "zone",
                    "package",
                    "billing_period"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "the name of the template for the cluster",
                        "type": "string",
                        "format": "string",
                        "example": "Test-K8s"
                    },
                    "project": {
                        "title": "project",
                        "description": "The name of the project under which the service should be created.",
                        "type": "string",
                        "format": "string",
                        "example": "Test Project"
                    },
                    "zone": {
                        "title": "zone",
                        "description": "The name of the zone under which the service should be created.",
                        "type": "string",
                        "format": "string",
                        "example": "Zone0"
                    },
                    "version": {
                        "title": "version",
                        "description": "Kubernetes version with which cluster to be launched",
                        "type": "string",
                        "format": "string",
                        "example": "1.24.0"
                    },
                    "node_size": {
                        "title": "node_size",
                        "description": "number of Kubernetes cluster worker nodes",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "package": {
                        "title": "package",
                        "description": "the package name of the service offering for the virtual machine.",
                        "type": "string",
                        "format": "string",
                        "example": "Example-1"
                    },
                    "autoscale": {
                        "title": "autoscale",
                        "description": "whether auto scaling is enabled for the cluster",
                        "type": "string",
                        "format": "string",
                        "example": "1"
                    },
                    "min_cluster_size": {
                        "title": "min_cluster_size",
                        "description": "Maximum number of worker nodes in the cluster",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "max_cluster_size": {
                        "title": "max_cluster_size",
                        "description": "Minimum number of worker nodes in the cluster",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "billing_period": {
                        "title": "billing_period",
                        "description": "hourly, monthly or yearly",
                        "type": "string",
                        "format": "enum",
                        "example": "monthly"
                    },
                    "key_pair": {
                        "title": "key_pair",
                        "description": "SSH key pair",
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "control_nodes": {
                        "title": "control_nodes",
                        "description": "number of Kubernetes cluster control nodes, default is 1.",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "high_availability": {
                        "title": "high_availability",
                        "description": "enable/disable high availability by passing control_nodes",
                        "type": "string",
                        "format": "string",
                        "example": "false"
                    },
                    "coupon_code": {
                        "title": "coupon_code",
                        "description": "The coupon code",
                        "type": "string",
                        "format": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "CreateLoadBalancerRequest": {
                "title": "Create Network Request",
                "description": "Store Network request body",
                "required": [
                    "name",
                    "project",
                    "zone",
                    "network",
                    "billing_period",
                    "rules",
                    "protocol",
                    "algorithm",
                    "instance"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "the name of the load balancer",
                        "type": "string",
                        "format": "string",
                        "example": "Test-LB"
                    },
                    "project": {
                        "title": "project",
                        "description": "The name of the project under which the service should be created.",
                        "type": "string",
                        "format": "string",
                        "example": "Test"
                    },
                    "zone": {
                        "title": "zone",
                        "description": "The name of the zone under which the service should be created.",
                        "type": "string",
                        "format": "string",
                        "example": "Zone0"
                    },
                    "network": {
                        "title": "network",
                        "description": "The name of the network (Isolated/Vpc) under which the service should be created.",
                        "type": "string",
                        "format": "string",
                        "example": "default-vpc-network-pune-f1fa"
                    },
                    "billing_period": {
                        "title": "billing_period",
                        "description": "billing_period - hourly, monthly or yearly",
                        "type": "string",
                        "format": "enum",
                        "example": "monthly"
                    },
                    "rules": {
                        "title": "rules",
                        "description": "rules of the load balancer",
                        "type": "string",
                        "format": "string",
                        "example": "[{ public_port : 80, private_port : 80 }]"
                    },
                    "protocol": {
                        "title": "protocol",
                        "description": "The protocol for the LB such as tcp, udp or tcp-proxy.",
                        "type": "string",
                        "format": "enum",
                        "example": "tcp"
                    },
                    "algorithm": {
                        "title": "algorithm",
                        "description": "load balancer algorithm (source, roundrobin, leastconn)",
                        "type": "string",
                        "format": "enum",
                        "example": "roundrobin"
                    },
                    "instance": {
                        "title": "instance",
                        "description": "Instance name to be attach to the load balancer",
                        "type": "string",
                        "format": "string",
                        "example": "Test-VM"
                    }
                },
                "type": "object"
            },
            "CreateNetworkRequest": {
                "title": "Create Network Request",
                "description": "Store Network request body",
                "required": [
                    "name",
                    "description",
                    "project",
                    "zone",
                    "end_port"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "host name for the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "Test-VM"
                    },
                    "description": {
                        "title": "description",
                        "description": "an optional user generated name for the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "description"
                    },
                    "project": {
                        "title": "project",
                        "description": "Project name of the app",
                        "type": "string",
                        "format": "string",
                        "example": "Test-001"
                    },
                    "zone": {
                        "title": "zone",
                        "description": "Availability zone name for the virtual machine",
                        "type": "string",
                        "example": "Zone0"
                    },
                    "network_offering_id": {
                        "title": "network_offering_id",
                        "description": "The network_offering_id",
                        "type": "string",
                        "format": "int64",
                        "example": "5115a37c-cdbf-11ec-ae23-525400ea93d0"
                    },
                    "external_id": {
                        "title": "external_id",
                        "description": "create virtual machines with public or private IP. Default true",
                        "type": "string",
                        "example": ""
                    },
                    "acl": {
                        "title": "acl",
                        "description": "Network ACL associated with the network.",
                        "type": "string",
                        "format": "int64",
                        "example": "5115a37c-cdbf-11ec-ae23-525400ea93d0"
                    },
                    "gateway": {
                        "title": "gateway",
                        "description": "the gateway of the network. Required for shared networks and isolated networks when it belongs to VPC",
                        "type": "string",
                        "format": "string",
                        "example": "10.1.1.1"
                    },
                    "vpc": {
                        "title": "vpc",
                        "description": "the VPC name network belongs to",
                        "type": "string",
                        "format": "string",
                        "example": "Example"
                    },
                    "netmask": {
                        "title": "netmask",
                        "description": "the netmask of the network. Required for shared networks and isolated networks when it belongs to VPC",
                        "type": "string",
                        "format": "string",
                        "example": "255.255.255.0"
                    }
                },
                "type": "object"
            },
            "CreatePortForwardingRequest": {
                "title": "Create Port Forwarding Request",
                "description": "Store Port Forwarding request body",
                "required": [
                    "ip",
                    "protocol",
                    "public_start_port",
                    "public_end_port",
                    "private_start_port",
                    "private_end_port",
                    "instance"
                ],
                "properties": {
                    "ip": {
                        "title": "ip",
                        "description": "the IP address of the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "14.192.19.212"
                    },
                    "instance": {
                        "title": "instance",
                        "description": "the name of the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "Test-VM"
                    },
                    "protocol": {
                        "title": "protocol",
                        "description": "The protocol for the port forwarding rule. Valid rules are tcp and udp.",
                        "type": "string",
                        "format": "enum",
                        "example": "tcp"
                    },
                    "public_start_port": {
                        "title": "public_start_port",
                        "description": "The public start port of port forwarding rule’s public port range.",
                        "type": "string",
                        "format": "integer",
                        "example": "80"
                    },
                    "public_end_port": {
                        "title": "public_end_port",
                        "description": "The public end port of port forwarding rule’s public port range.",
                        "type": "string",
                        "format": "integer",
                        "example": "80"
                    },
                    "private_start_port": {
                        "title": "private_start_port",
                        "description": "The private start port of port forwarding rule’s private port range.",
                        "type": "string",
                        "format": "integer",
                        "example": "80"
                    },
                    "private_end_port": {
                        "title": "private_end_port",
                        "description": "The private end port of port forwarding rule’s private port range.",
                        "type": "string",
                        "format": "integer",
                        "example": "80"
                    }
                },
                "type": "object"
            },
            "CreateProjectRequest": {
                "title": "Create Project Request",
                "description": "Store Project request body",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new project",
                        "type": "string",
                        "example": "A nice project"
                    },
                    "icon": {
                        "title": "icon",
                        "description": "SVG Icon",
                        "type": "string",
                        "format": "string",
                        "example": "cloud-01.svg"
                    },
                    "purpose": {
                        "title": "purpose",
                        "description": "Purpose of the project",
                        "type": "string",
                        "example": "Just trying it out"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new project",
                        "type": "string",
                        "example": "This is new project's description"
                    }
                },
                "type": "object"
            },
            "CreateScaleClusterRequest": {
                "title": "Create Kubernetes Scale Cluster Request",
                "description": "Create Scale Cluster request body",
                "required": [
                    "autoscale",
                    "min_cluster_size",
                    "max_cluster_size",
                    "package"
                ],
                "properties": {
                    "autoscale": {
                        "title": "autoscale",
                        "description": "Name for the kubernetes scale cluster",
                        "type": "string",
                        "format": "string",
                        "example": "Test"
                    },
                    "min_cluster_size": {
                        "title": "min_cluster_size",
                        "description": "Minimum cluster size of the kubernetes scale cluster",
                        "type": "string",
                        "format": "integer",
                        "example": "2"
                    },
                    "max_cluster_size": {
                        "title": "max_cluster_size",
                        "description": "Maximum cluster size of the kubernetes scale cluster",
                        "type": "string",
                        "format": "integer",
                        "example": "2"
                    },
                    "package": {
                        "title": "package",
                        "description": "Name of the package with storage size",
                        "type": "string",
                        "format": "string",
                        "example": "V50"
                    },
                    "node_size": {
                        "title": "node_size",
                        "description": "Node size of the kubernetes scale cluster",
                        "type": "string",
                        "format": "integer",
                        "example": "2"
                    }
                },
                "type": "object"
            },
            "CreateSnapshotRequest": {
                "title": "Create Snapshot Request",
                "description": "Create Snapshot request body",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name for the Snapshot",
                        "type": "string",
                        "format": "string",
                        "example": "Test"
                    }
                },
                "type": "object"
            },
            "CreateVpcRequest": {
                "title": "Create VPC Request",
                "description": "Store VPC request body",
                "required": [
                    "name",
                    "description",
                    "project",
                    "zone",
                    "network_size",
                    "range_prefix",
                    "billing_period"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "host name for the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "VPC-1"
                    },
                    "description": {
                        "title": "description",
                        "description": "an optional user generated name for the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "VPC description"
                    },
                    "project": {
                        "title": "project",
                        "description": "name of the project",
                        "type": "string",
                        "format": "string",
                        "example": "Test-001"
                    },
                    "zone": {
                        "title": "zone",
                        "description": "Availability zone name for the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "Zone0"
                    },
                    "network_size": {
                        "title": "network_size",
                        "description": "network size (16, 20, 22, 24, 28). Use for cidr parameter",
                        "type": "string",
                        "format": "integer",
                        "example": "16"
                    },
                    "range_prefix": {
                        "title": "range_prefix",
                        "description": "Use for cidr parameter ",
                        "type": "string",
                        "format": "string",
                        "example": "10.0.0.0"
                    },
                    "billing_period": {
                        "title": "billing_period",
                        "description": "hourly, monthly or yearly",
                        "type": "string",
                        "format": "enum",
                        "example": "monthly"
                    },
                    "coupon_code": {
                        "title": "coupon_code",
                        "description": "The coupon code",
                        "type": "string",
                        "format": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "CreateVpnUserRequest": {
                "title": "Create Vpn User Request",
                "description": "Create Vpn User request body",
                "required": [
                    "username",
                    "password",
                    "project"
                ],
                "properties": {
                    "username": {
                        "title": "username",
                        "description": "Username of the Vpn Access",
                        "type": "string",
                        "format": "string",
                        "example": "Example"
                    },
                    "password": {
                        "title": "password",
                        "description": "Password of the Vpn Access",
                        "type": "string",
                        "format": "string",
                        "example": "*******"
                    },
                    "project": {
                        "title": "project",
                        "description": "Project name of the Vpn Access",
                        "type": "string",
                        "format": "string",
                        "example": "Example"
                    }
                },
                "type": "object"
            },
            "DeleteEgressRuleRequest": {
                "title": "Delete Egress Rule Request",
                "description": "Delete Egress Rule request body",
                "required": [
                    "cidr_list"
                ],
                "properties": {
                    "cidr_list": {
                        "title": "cidr_list",
                        "description": "CIDR of a egress rule",
                        "type": "string",
                        "format": "string",
                        "example": "10.0.0.0/0"
                    },
                    "start_port": {
                        "title": "start_port",
                        "description": "start port",
                        "type": "string",
                        "format": "string",
                        "example": "80"
                    },
                    "end_port": {
                        "title": "end_port",
                        "description": "end port",
                        "type": "string",
                        "format": "string",
                        "example": "80"
                    }
                },
                "type": "object"
            },
            "DisableRemoteVpnAccessRequest": {
                "title": "Disable Remote Vpn Access Request",
                "description": "Disable Remote Vpn Access request body",
                "required": [
                    "ip_address"
                ],
                "properties": {
                    "ip_address": {
                        "title": "ip_address",
                        "description": "IP address of the Vpn Access",
                        "type": "string",
                        "format": "string",
                        "example": "146.155.15.0"
                    }
                },
                "type": "object"
            },
            "EnableRemoteVpnAccessRequest": {
                "title": "Enable Remote Vpn Access Request",
                "description": "Enable Remote Vpn Access request body",
                "required": [
                    "ip_address"
                ],
                "properties": {
                    "ip_address": {
                        "title": "ip_address",
                        "description": "IP address of the Vpn Access",
                        "type": "string",
                        "format": "string",
                        "example": "146.155.15.0"
                    }
                },
                "type": "object"
            },
            "IpAddressStaticNatRequest": {
                "title": "Ip Address Static Nat Request",
                "description": "Ip Address Static Nat Request body",
                "required": [
                    "instance"
                ],
                "properties": {
                    "instance": {
                        "title": "instance",
                        "description": "Instance Name",
                        "type": "string",
                        "example": "Test"
                    }
                },
                "type": "object"
            },
            "RemoveLoadBalancerRuleRequest": {
                "title": "Remove Load Balancer Rule Request",
                "description": "Store Network request body",
                "required": [
                    "private_port",
                    "public_port"
                ],
                "properties": {
                    "private_port": {
                        "title": "private_port",
                        "description": "the private port of the private IP address/virtual machine where the network traffic will be load balanced to",
                        "type": "string",
                        "format": "integer",
                        "example": "80"
                    },
                    "public_port": {
                        "title": "public_port",
                        "description": "the public port from where the network traffic will be load balanced from",
                        "type": "string",
                        "format": "integer",
                        "example": "80"
                    }
                },
                "type": "object"
            },
            "UpdateLoadBalancerRequest": {
                "title": "Update Load Balancer Request",
                "description": "Update Load Balancer request body",
                "required": [
                    "public_port",
                    "private_port"
                ],
                "properties": {
                    "public_port": {
                        "title": "public_port",
                        "description": "the public port from where the network traffic will be load balanced from",
                        "type": "string",
                        "example": "80"
                    },
                    "private_port": {
                        "title": "private_port",
                        "description": "the private port of the private IP address/virtual machine where the network traffic will be load balanced to",
                        "type": "string",
                        "example": "80"
                    }
                },
                "type": "object"
            },
            "UpdateProjectRequest": {
                "title": "Update Project Request",
                "description": "Update Project request body",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the project",
                        "type": "string",
                        "example": "A nice project"
                    },
                    "icon": {
                        "title": "icon",
                        "description": "SVG Icon",
                        "type": "string",
                        "format": "string",
                        "example": "cloud-01.svg"
                    },
                    "purpose": {
                        "title": "purpose",
                        "description": "Purpose of the project",
                        "type": "string",
                        "example": "Just trying it out"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new project",
                        "type": "string",
                        "example": "This is new project's description"
                    }
                },
                "type": "object"
            },
            "UpgradeKubernetesRequest": {
                "title": "Upgrade Kubernetes Request",
                "description": "Upgrade Kubernetes Request Body",
                "required": [
                    "version"
                ],
                "properties": {
                    "version": {
                        "title": "version",
                        "description": "the name of the Kubernetes version for upgrade",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "BlockStorageResource": {
                "title": "BlockStorage Resource",
                "description": "Block storage resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockStorageSchema"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Block Storage Resource"
                }
            },
            "FirewallResource": {
                "title": "Firewall Resource",
                "description": "Firewall resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Firewall Resource"
                }
            },
            "InstanceResource": {
                "title": "Instance Resource",
                "description": "Instance resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Instance Resource"
                }
            },
            "KubernetesResource": {
                "title": "Kubernetes Resource",
                "description": "Kubernetes resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Kubernetes Resource"
                }
            },
            "LoadBalancerResource": {
                "title": "LoadBalancer Resource",
                "description": "Load Balancer Resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Load Balancer Resource"
                }
            },
            "NetworkResource": {
                "title": "Network Resource",
                "description": "Network Resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Network Resource"
                }
            },
            "PortForwardingResource": {
                "title": "Port Forwarding Resource",
                "description": "Port Forwarding resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Port Forwarding Resource"
                }
            },
            "ProjectResource": {
                "title": "Project Resource",
                "description": "Project resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectSchema"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProjectResource"
                }
            },
            "SnapshotResource": {
                "title": "Snapshot Resource",
                "description": "Snapshot Resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Snapshot Resource"
                }
            },
            "VpcResource": {
                "title": "Vpc Resource",
                "description": "Vpc resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Vpc Resource"
                }
            },
            "VpnUsersResource": {
                "title": "Vpn Users Resource",
                "description": "Vpn Users resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Vpn Users Resource"
                }
            },
            "AccountSchema": {
                "title": "Account",
                "description": "Account Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "currency_id": {
                        "title": "currency_id",
                        "description": "currency_id",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "business_category_id": {
                        "title": "business_category_id",
                        "description": "business_category_id",
                        "type": "integer",
                        "format": "int64",
                        "example": "null"
                    },
                    "business_size_id": {
                        "title": "business_size_id",
                        "description": "business_size_id",
                        "type": "integer",
                        "format": "int64",
                        "example": "null"
                    },
                    "url": {
                        "title": "url",
                        "description": "url",
                        "type": "string",
                        "example": "null"
                    },
                    "customer_id": {
                        "title": "customer_id",
                        "description": "customer_id",
                        "type": "string",
                        "example": "1001"
                    },
                    "domain_id": {
                        "title": "domain_id",
                        "description": "domain id",
                        "type": "integer",
                        "format": "string",
                        "example": "80552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "username": {
                        "title": "username",
                        "description": "Account username",
                        "type": "integer",
                        "format": "string",
                        "example": "example-1001"
                    },
                    "parent_account_id": {
                        "title": "parent_account_id",
                        "description": "parent_account_id",
                        "type": "integer",
                        "format": "string",
                        "example": "80552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "frozen_at": {
                        "title": "frozen_at",
                        "description": "Frozen at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "suspended_at": {
                        "title": "suspended_at",
                        "description": "Suspended at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "is_enterprise": {
                        "title": "is_enterprise",
                        "description": "is_enterprise",
                        "type": "string",
                        "example": "0"
                    },
                    "is_disciplinart_action_applicable": {
                        "title": "is_disciplinart_action_applicable",
                        "description": "is_disciplinart_action_applicable",
                        "type": "string",
                        "example": "0"
                    },
                    "low_balance_at": {
                        "title": "low_balance_at",
                        "description": "low_balance_at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Account"
                }
            },
            "AsyncJobSchema": {
                "title": "Async Job",
                "description": "Async Job Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "job_id": {
                        "title": "Job Id",
                        "description": "Id of the service",
                        "type": "string",
                        "example": "89552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "_original": {
                        "$ref": "#/components/schemas/OriginalSchema"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Async Job"
                }
            },
            "AttachBlockStorageSchema": {
                "title": "Attach BlockStorage Schema",
                "description": "Attach BlockStorage Schema",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "account_id": {
                        "title": "account_id",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "project_id": {
                        "title": "project_id",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "instance_ids": {
                        "title": "instance_ids",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "name",
                        "type": "integer",
                        "format": "string",
                        "example": "K8s"
                    },
                    "size": {
                        "title": "size",
                        "description": "size",
                        "type": "integer",
                        "format": "string",
                        "example": "100"
                    },
                    "frozen_at": {
                        "title": "frozen_at",
                        "description": "frozen at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "suspended_at": {
                        "title": "suspended_at",
                        "description": "suspended at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "terminate_at": {
                        "title": "terminate_at",
                        "description": "terminate at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "deleted_at",
                        "description": "deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectAccountSchema"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Attach BlockStorage Schema"
                }
            },
            "BlockStorageSchema": {
                "title": "Block Storage",
                "description": "Block storage Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "size": {
                        "title": "size",
                        "description": "Size of the block storage",
                        "type": "string",
                        "example": "50"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the block storage",
                        "type": "string",
                        "example": "My Block Storage"
                    },
                    "account_id": {
                        "title": "Account ID",
                        "description": "Account id of the block storage",
                        "type": "string",
                        "format": "string",
                        "example": "80552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "frozen_at": {
                        "title": "Frozen at",
                        "description": "Block storage frozen time",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "suspended_at": {
                        "title": "Suspended at",
                        "description": "Block storage suspended time",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "terminated_at": {
                        "title": "Terminated at",
                        "description": "Block storage termination time",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Block storage deletion time",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "Original": {
                        "title": "Original",
                        "description": "Original Object",
                        "type": "string",
                        "format": "object",
                        "example": "{}"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Block Storage"
                }
            },
            "CreateBlockstorageSchema": {
                "title": "Create Blockstorage Schema",
                "description": "Create Blockstorage Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Create Block Storage"
                    },
                    "totaljobs": {
                        "title": "totaljobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "pendingjobs": {
                        "title": "pendingjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "processedjobs": {
                        "title": "processedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "progress": {
                        "title": "progress",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "failedjobs": {
                        "title": "failedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "options": {
                        "title": "options",
                        "description": "",
                        "type": "object",
                        "format": "string",
                        "example": "[]"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "cancelledAt": {
                        "title": "cancelledAt",
                        "description": "cancelled at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "finishedAt": {
                        "title": "finishedAt",
                        "description": "finished at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Create Blockstorage Schema"
                }
            },
            "CreateFirewallSchema": {
                "title": "Firewall",
                "description": "Firewall Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "ip": {
                        "title": "ip",
                        "description": "IP",
                        "type": "string",
                        "format": "string",
                        "example": "14.192.19.212"
                    },
                    "cidr": {
                        "title": "cidr",
                        "description": "The cidr of the new firewall rule",
                        "type": "string",
                        "format": "string",
                        "example": "0.0.0.0/0"
                    },
                    "protocol": {
                        "title": "protocol",
                        "description": "The protocol for the firewall rule. Valid values are tcp , udp and icmp.",
                        "type": "string",
                        "format": "enum",
                        "example": "tcp"
                    },
                    "start_port": {
                        "title": "start_port",
                        "description": "The starting port of firewall rule",
                        "type": "string",
                        "format": "integer",
                        "example": "80"
                    },
                    "end_port": {
                        "title": "end_port",
                        "description": "The ending port of firewall rule",
                        "type": "string",
                        "format": "enum",
                        "example": "80"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Firewall"
                }
            },
            "CreateKubernetesSchema": {
                "title": "Create Kubernetes Schema",
                "description": "Create Kubernetes Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "account_id": {
                        "title": "account_id",
                        "description": "account_id",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "project_id": {
                        "title": "project_id",
                        "description": "project id",
                        "type": "integer",
                        "format": "string",
                        "example": "80552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "version": {
                        "title": "version",
                        "description": "kubernetes version",
                        "type": "string",
                        "format": "string",
                        "example": "1.24.0"
                    },
                    "name": {
                        "title": "name",
                        "description": "kubernetes name",
                        "type": "string",
                        "format": "string",
                        "example": "Example"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Create Kubernetes"
                }
            },
            "CreateLBRuleSchema": {
                "title": "Create Load Balancer Rule",
                "description": "Create Load Balancer Rule",
                "properties": {
                    "message": {
                        "title": "message",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Adding Load balancer rule!"
                    },
                    "id": {
                        "title": "id",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "Load Balancer name",
                        "type": "integer",
                        "format": "string",
                        "example": "Example"
                    },
                    "project_id": {
                        "title": "project_id",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "instance_ids": {
                        "title": "instance_ids",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "zone_id": {
                        "title": "zone_id",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "algorithm": {
                        "title": "algorithm",
                        "description": "algorithm",
                        "type": "string",
                        "format": "integer",
                        "example": "roundrobin"
                    },
                    "sticky_method": {
                        "title": "sticky_method",
                        "description": "sticky method",
                        "type": "string",
                        "format": "string",
                        "example": "None"
                    },
                    "force_redirect": {
                        "title": "force_redirect",
                        "description": "force_redirect",
                        "type": "string",
                        "format": "string",
                        "example": "false"
                    },
                    "protocol": {
                        "title": "protocol",
                        "description": "protocol",
                        "type": "string",
                        "format": "string",
                        "example": "tcp"
                    },
                    "keep_alive": {
                        "title": "keep_alive",
                        "description": "keep alive",
                        "type": "string",
                        "format": "string",
                        "example": "false"
                    },
                    "frozen_at": {
                        "title": "frozen_at",
                        "description": "frozen at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "suspended_at": {
                        "title": "suspended_at",
                        "description": "suspended at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "terminate_at": {
                        "title": "terminate_at",
                        "description": "terminate at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "deleted_at",
                        "description": "deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectAccountSchema"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Create Load Balancer Rule"
                }
            },
            "CreateLoadBalancerRuleSchema": {
                "title": "Create Load Balancer Rule Schema",
                "description": "Create Load Balancer Rule Schema",
                "properties": {
                    "headers": {
                        "title": "headers",
                        "description": "",
                        "type": "string",
                        "example": "{}"
                    },
                    "original": {
                        "$ref": "#/components/schemas/CreateLBRuleSchema"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Create Load Balancer Rule Schema"
                }
            },
            "CreateLoadbalancerBatchSchema": {
                "title": "Create Loadbalancer Schema",
                "description": "Create Loadbalancer Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Create Load Balancer"
                    },
                    "totaljobs": {
                        "title": "totaljobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "pendingjobs": {
                        "title": "pendingjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "processedjobs": {
                        "title": "processedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "progress": {
                        "title": "progress",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "failedjobs": {
                        "title": "failedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "options": {
                        "title": "options",
                        "description": "",
                        "type": "object",
                        "format": "string",
                        "example": "[]"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "cancelledAt": {
                        "title": "cancelledAt",
                        "description": "cancelled at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "finishedAt": {
                        "title": "finishedAt",
                        "description": "finished at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Create Loadbalancer Schema"
                }
            },
            "CreateLoadbalancerSchema": {
                "title": "Create Loadbalancer Schema",
                "description": "Create Loadbalancer Schema",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Delete Network"
                    },
                    "zone_id": {
                        "title": "zone_id",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "project_id": {
                        "title": "project_id",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "algorithm": {
                        "title": "algorithm",
                        "description": "algorithm",
                        "type": "string",
                        "format": "integer",
                        "example": "roundrobin"
                    },
                    "sticky_method": {
                        "title": "sticky_method",
                        "description": "sticky method",
                        "type": "string",
                        "format": "string",
                        "example": "None"
                    },
                    "force_redirect": {
                        "title": "force_redirect",
                        "description": "force_redirect",
                        "type": "string",
                        "format": "string",
                        "example": "false"
                    },
                    "protocol": {
                        "title": "protocol",
                        "description": "protocol",
                        "type": "string",
                        "format": "string",
                        "example": "tcp"
                    },
                    "keep_alive": {
                        "title": "keep_alive",
                        "description": "keep alive",
                        "type": "string",
                        "format": "string",
                        "example": "false"
                    },
                    "instance_ids": {
                        "title": "instance_ids",
                        "description": "",
                        "type": "object",
                        "format": "string",
                        "example": "[]"
                    },
                    "id": {
                        "title": "id",
                        "description": "UUID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectAccountSchema"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Create Loadbalancer Schema"
                }
            },
            "CreateNetworkSchema": {
                "title": "Network",
                "description": "Network Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "host name for the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "Test-VM"
                    },
                    "description": {
                        "title": "description",
                        "description": "an optional user generated name for the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "description"
                    },
                    "project": {
                        "title": "project",
                        "description": "Project name of the app",
                        "type": "string",
                        "format": "string",
                        "example": "Test-001"
                    },
                    "zone": {
                        "title": "zone",
                        "description": "Availability zone name for the virtual machine",
                        "type": "string",
                        "example": "Zone0"
                    },
                    "network_offering_id": {
                        "title": "network_offering_id",
                        "description": "The network_offering_id",
                        "type": "string",
                        "format": "int64",
                        "example": "5115a37c-cdbf-11ec-ae23-525400ea93d0"
                    },
                    "external_id": {
                        "title": "external_id",
                        "description": "create virtual machines with public or private IP. Default true",
                        "type": "string",
                        "example": ""
                    },
                    "acl": {
                        "title": "acl",
                        "description": "Network ACL associated with the network.",
                        "type": "string",
                        "format": "int64",
                        "example": "5115a37c-cdbf-11ec-ae23-525400ea93d0"
                    },
                    "gateway": {
                        "title": "gateway",
                        "description": "the gateway of the network. Required for shared networks and isolated networks when it belongs to VPC",
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "vpc": {
                        "title": "vpc",
                        "description": "the VPC name network belongs to",
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "netmask": {
                        "title": "netmask",
                        "description": "the netmask of the network. Required for shared networks and isolated networks when it belongs to VPC",
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Network"
                }
            },
            "CreatePortForwardingSchema": {
                "title": "Port Forwarding",
                "description": "Port Forwarding Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "ip": {
                        "title": "ip",
                        "description": "the IP address of the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "14.192.19.212"
                    },
                    "instance": {
                        "title": "instance",
                        "description": "the name of the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "Test-VM"
                    },
                    "protocol": {
                        "title": "protocol",
                        "description": "The protocol for the port forwarding rule. Valid rules are tcp and udp.",
                        "type": "string",
                        "format": "enum",
                        "example": "tcp"
                    },
                    "public_start_port": {
                        "title": "public_start_port",
                        "description": "The public start port of port forwarding rule’s public port range.",
                        "type": "string",
                        "format": "integer",
                        "example": "80"
                    },
                    "public_end_port": {
                        "title": "public_end_port",
                        "description": "The public end port of port forwarding rule’s public port range.",
                        "type": "string",
                        "format": "integer",
                        "example": "80"
                    },
                    "private_start_port": {
                        "title": "private_start_port",
                        "description": "The private start port of port forwarding rule’s private port range.",
                        "type": "string",
                        "format": "integer",
                        "example": "80"
                    },
                    "private_end_port": {
                        "title": "private_end_port",
                        "description": "The private end port of port forwarding rule’s private port range.",
                        "type": "string",
                        "format": "integer",
                        "example": "80"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Port Forwarding"
                }
            },
            "DeleteBlockStorageSchema": {
                "title": "Delete Block Storage Schema",
                "description": "Delete Block Storage Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Create Load Balancer"
                    },
                    "totaljobs": {
                        "title": "totaljobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "pendingjobs": {
                        "title": "pendingjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "processedjobs": {
                        "title": "processedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "progress": {
                        "title": "progress",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "failedjobs": {
                        "title": "failedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "options": {
                        "title": "options",
                        "description": "",
                        "type": "object",
                        "format": "string",
                        "example": "[]"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "cancelledAt": {
                        "title": "cancelledAt",
                        "description": "cancelled at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "finishedAt": {
                        "title": "finishedAt",
                        "description": "finished at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Delete Block Storage Schema"
                }
            },
            "DeleteInstanceSchema": {
                "title": "Delete Instance",
                "description": "Delete Instance Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Delete Network"
                    },
                    "totaljobs": {
                        "title": "totaljobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "pendingjobs": {
                        "title": "pendingjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "processedjobs": {
                        "title": "processedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "progress": {
                        "title": "progress",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "failedjobs": {
                        "title": "failedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "options": {
                        "title": "options",
                        "description": "",
                        "type": "object",
                        "format": "string",
                        "example": "[]"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "cancelledAt": {
                        "title": "cancelledAt",
                        "description": "cancelled at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "finishedAt": {
                        "title": "finishedAt",
                        "description": "finished at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Delete Instance"
                }
            },
            "DeleteKubernetesSchema": {
                "title": "Delete Kubernetes Schema",
                "description": "Delete Kubernetes Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Delete Kubernetes"
                    },
                    "totaljobs": {
                        "title": "totaljobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "pendingjobs": {
                        "title": "pendingjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "processedjobs": {
                        "title": "processedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "progress": {
                        "title": "progress",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "failedjobs": {
                        "title": "failedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "options": {
                        "title": "options",
                        "description": "",
                        "type": "object",
                        "format": "string",
                        "example": "[]"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "cancelledAt": {
                        "title": "cancelledAt",
                        "description": "cancelled at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "finishedAt": {
                        "title": "finishedAt",
                        "description": "finished at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Delete Kubernetes Schema"
                }
            },
            "DeleteNetworkSchema": {
                "title": "Delete Network",
                "description": "Delete Network Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Delete Instance"
                    },
                    "totaljobs": {
                        "title": "totaljobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "pendingjobs": {
                        "title": "pendingjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "processedjobs": {
                        "title": "processedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "progress": {
                        "title": "progress",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "failedjobs": {
                        "title": "failedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "options": {
                        "title": "options",
                        "description": "",
                        "type": "object",
                        "format": "string",
                        "example": "[]"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "cancelledAt": {
                        "title": "cancelledAt",
                        "description": "cancelled at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "finishedAt": {
                        "title": "finishedAt",
                        "description": "finished at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Delete Network"
                }
            },
            "DeleteVpcSchema": {
                "title": "Delete Vpc Schema",
                "description": "Delete Vpc Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Delete Vpc"
                    },
                    "totaljobs": {
                        "title": "totaljobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "pendingjobs": {
                        "title": "pendingjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "processedjobs": {
                        "title": "processedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "progress": {
                        "title": "progress",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "failedjobs": {
                        "title": "failedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "options": {
                        "title": "options",
                        "description": "",
                        "type": "object",
                        "format": "string",
                        "example": "[]"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "cancelledAt": {
                        "title": "cancelledAt",
                        "description": "cancelled at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "finishedAt": {
                        "title": "finishedAt",
                        "description": "finished at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Delete Vpc Schema"
                }
            },
            "DetachBlockStorageSchema": {
                "title": "Detach BlockStorage Schema",
                "description": "Detach BlockStorage Schema",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "account_id": {
                        "title": "account_id",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "project_id": {
                        "title": "project_id",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "instance_ids": {
                        "title": "instance_ids",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "name",
                        "type": "integer",
                        "format": "string",
                        "example": "K8s"
                    },
                    "size": {
                        "title": "size",
                        "description": "size",
                        "type": "integer",
                        "format": "string",
                        "example": "100"
                    },
                    "frozen_at": {
                        "title": "frozen_at",
                        "description": "frozen at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "suspended_at": {
                        "title": "suspended_at",
                        "description": "suspended at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "terminate_at": {
                        "title": "terminate_at",
                        "description": "terminate at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "deleted_at",
                        "description": "deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectAccountSchema"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Detach BlockStorage Schema"
                }
            },
            "InstanceBatchSchema": {
                "title": "Instance Batch",
                "description": "Instance Batch Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Create Instance"
                    },
                    "totaljobs": {
                        "title": "totaljobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "pendingjobs": {
                        "title": "pendingjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "processedjobs": {
                        "title": "processedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "progress": {
                        "title": "progress",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "failedjobs": {
                        "title": "failedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "options": {
                        "title": "options",
                        "description": "",
                        "type": "object",
                        "format": "string",
                        "example": "{queue:{Test-queue-instance}}"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "cancelledAt": {
                        "title": "cancelledAt",
                        "description": "cancelled at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "finishedAt": {
                        "title": "finishedAt",
                        "description": "finished at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Instance Batch"
                }
            },
            "InstanceSchema": {
                "title": "Create Instance Schema",
                "description": "Create Instance Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Create Instance"
                    },
                    "totaljobs": {
                        "title": "totaljobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "pendingjobs": {
                        "title": "pendingjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "processedjobs": {
                        "title": "processedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "progress": {
                        "title": "progress",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "failedjobs": {
                        "title": "failedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "options": {
                        "title": "options",
                        "description": "",
                        "type": "object",
                        "format": "string",
                        "example": "[]"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "cancelledAt": {
                        "title": "cancelledAt",
                        "description": "cancelled at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "finishedAt": {
                        "title": "finishedAt",
                        "description": "finished at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Create Instance Schema"
                }
            },
            "KubernetesBatchSchema": {
                "title": "Kubernetes Batch Schema",
                "description": "Kubernetes Batch Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Create Kubernetes"
                    },
                    "totaljobs": {
                        "title": "totaljobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "pendingjobs": {
                        "title": "pendingjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "processedjobs": {
                        "title": "processedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "progress": {
                        "title": "progress",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "failedjobs": {
                        "title": "failedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "options": {
                        "title": "options",
                        "description": "",
                        "type": "object",
                        "format": "string",
                        "example": "[]"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "cancelledAt": {
                        "title": "cancelledAt",
                        "description": "cancelled at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "finishedAt": {
                        "title": "finishedAt",
                        "description": "finished at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Kubernetes Batch Schema"
                }
            },
            "KubernetesSchema": {
                "title": "Kubernetes",
                "description": "Kubernetes Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "the name of the template for the cluster",
                        "type": "string",
                        "example": "Test K8s"
                    },
                    "project": {
                        "title": "project",
                        "description": "The name of the project under which the service should be created.",
                        "type": "string",
                        "format": "string",
                        "example": "Test Project"
                    },
                    "zone": {
                        "title": "zone",
                        "description": "The name of the zone under which the service should be created.",
                        "type": "string",
                        "example": "Zone0"
                    },
                    "version": {
                        "title": "version",
                        "description": "Kubernetes version with which cluster to be launched",
                        "type": "string",
                        "example": ""
                    },
                    "node_size": {
                        "title": "node_size",
                        "description": "number of Kubernetes cluster worker nodes",
                        "type": "string",
                        "example": ""
                    },
                    "package": {
                        "title": "package",
                        "description": "the package name of the service offering for the virtual machine.",
                        "type": "string",
                        "example": ""
                    },
                    "autoscale": {
                        "title": "autoscale",
                        "description": "whether auto scaling is enabled for the cluster",
                        "type": "string",
                        "example": ""
                    },
                    "min_cluster_size": {
                        "title": "min_cluster_size",
                        "description": "Maximum number of worker nodes in the cluster",
                        "type": "string",
                        "example": ""
                    },
                    "max_cluster_size": {
                        "title": "max_cluster_size",
                        "description": "Minimum number of worker nodes in the cluster",
                        "type": "string",
                        "example": ""
                    },
                    "billing_period": {
                        "title": "billing_period",
                        "description": "hourly, monthly or yearly",
                        "type": "string",
                        "example": ""
                    },
                    "key_pair": {
                        "title": "key_pair",
                        "description": "SSH key pair",
                        "type": "string",
                        "example": ""
                    },
                    "control_nodes": {
                        "title": "control_nodes",
                        "description": "number of Kubernetes cluster control nodes, default is 1.",
                        "type": "string",
                        "example": ""
                    },
                    "high_availability": {
                        "title": "high_availability",
                        "description": "enable/disable high availability by passing control_nodes",
                        "type": "string",
                        "example": ""
                    },
                    "coupon_code": {
                        "title": "coupon_code",
                        "description": "The coupon code",
                        "type": "string",
                        "example": ""
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Kubernetes"
                }
            },
            "LoadBalancerSchema": {
                "title": "Create Load Balancer",
                "description": "Create Load Balancer Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "the name of the load balancer",
                        "type": "string",
                        "format": "string",
                        "example": "Test-LB"
                    },
                    "project": {
                        "title": "project",
                        "description": "The name of the project under which the service should be created.",
                        "type": "string",
                        "format": "string",
                        "example": "Test-001"
                    },
                    "zone": {
                        "title": "zone",
                        "description": "The name of the zone under which the service should be created.",
                        "type": "string",
                        "format": "string",
                        "example": "Zone0"
                    },
                    "network": {
                        "title": "network",
                        "description": "The name of the network (Isolated/Vpc) under which the service should be created.",
                        "type": "string",
                        "format": "string",
                        "example": "Isolated"
                    },
                    "billing_period": {
                        "title": "billing_period",
                        "description": "billing_period - hourly, monthly or yearly",
                        "type": "string",
                        "format": "enum",
                        "example": "monthly"
                    },
                    "rules": {
                        "title": "rules",
                        "description": "rules of the load balancer",
                        "type": "string",
                        "format": "string",
                        "example": ""
                    },
                    "protocol": {
                        "title": "protocol",
                        "description": "The protocol for the LB such as tcp, udp or tcp-proxy.",
                        "type": "string",
                        "format": "enum",
                        "example": "tcp"
                    },
                    "algorithm": {
                        "title": "algorithm",
                        "description": "load balancer algorithm (source, roundrobin, leastconn)",
                        "type": "string",
                        "format": "enum",
                        "example": "roundrobin"
                    },
                    "instance": {
                        "title": "instance",
                        "description": "Instance name to be attach to the load balancer",
                        "type": "string",
                        "format": "string",
                        "example": "Test-VM"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "orignal": {
                        "title": "Orignal",
                        "description": "Orignal Object",
                        "type": "string",
                        "format": "object",
                        "example": "{}"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Create Load Balancer"
                }
            },
            "NetworkSchema": {
                "title": "Network Schema",
                "description": "Network Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "account_id": {
                        "title": "account_id",
                        "description": "Account Id",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-204949137565"
                    },
                    "name": {
                        "title": "name",
                        "description": "host name for the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "VPC-1"
                    },
                    "description": {
                        "title": "description",
                        "description": "an optional user generated name for the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "VPC description"
                    },
                    "project_id": {
                        "title": "project_id",
                        "description": "Project Id",
                        "type": "string",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-564575645632"
                    },
                    "zone_id": {
                        "title": "zone_id",
                        "description": "Zone Id",
                        "type": "string",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-564575645632"
                    },
                    "type": {
                        "title": "type",
                        "description": "Network Type",
                        "type": "string",
                        "format": "string",
                        "example": "Isolated"
                    },
                    "parent_id": {
                        "title": "parent_id",
                        "description": "Network parent id",
                        "type": "string",
                        "format": "int64",
                        "example": "null"
                    },
                    "default": {
                        "title": "default",
                        "description": "default",
                        "type": "string",
                        "format": "string",
                        "example": "true"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Network Schema"
                }
            },
            "OriginalSchema": {
                "title": "Async Original Job",
                "description": "Async Original Job Schema",
                "properties": {
                    "job_id": {
                        "title": "Job Id",
                        "description": "Id of the service",
                        "type": "string",
                        "example": "89552b97-a784-4f7f-8154-2049491379c0"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Async Original Job"
                }
            },
            "ProjectAccountSchema": {
                "title": "Project Account Schema",
                "description": "Project Account Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "icon": {
                        "title": "Icon",
                        "description": "Project icon",
                        "type": "string",
                        "example": "cloud-01.svg"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new project",
                        "type": "string",
                        "example": "A nice project"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the new project",
                        "type": "string",
                        "example": "This is new project's description"
                    },
                    "purpose": {
                        "title": "Purpose",
                        "description": "DPurpose project",
                        "type": "string",
                        "example": "Just trying it out"
                    },
                    "account_id": {
                        "title": "Account ID",
                        "description": "Account id of the new project",
                        "type": "integer",
                        "format": "string",
                        "example": "80552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "account": {
                        "$ref": "#/components/schemas/AccountSchema"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Project Account Schema"
                }
            },
            "ProjectSchema": {
                "title": "Project",
                "description": "Project Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "icon": {
                        "title": "Icon",
                        "description": "Project icon",
                        "type": "string",
                        "example": "cloud-01.svg"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new project",
                        "type": "string",
                        "example": "A nice project"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the new project",
                        "type": "string",
                        "example": "This is new project's description"
                    },
                    "purpose": {
                        "title": "Purpose",
                        "description": "DPurpose project",
                        "type": "string",
                        "example": "Just trying it out"
                    },
                    "account_id": {
                        "title": "Account ID",
                        "description": "Account id of the new project",
                        "type": "integer",
                        "format": "string",
                        "example": "80552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Project"
                }
            },
            "PublicIpAddressSchema": {
                "title": "Public IP Address Schema",
                "description": "Public IP Address Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "UUID",
                        "type": "integer",
                        "format": "string",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "name": {
                        "title": "name",
                        "description": "",
                        "type": "string",
                        "format": "string",
                        "example": "Associate Ip Address"
                    },
                    "totaljobs": {
                        "title": "totaljobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "pendingjobs": {
                        "title": "pendingjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "1"
                    },
                    "processedjobs": {
                        "title": "processedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "progress": {
                        "title": "progress",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "failedjobs": {
                        "title": "failedjobs",
                        "description": "",
                        "type": "string",
                        "format": "integer",
                        "example": "0"
                    },
                    "options": {
                        "title": "options",
                        "description": "",
                        "type": "object",
                        "format": "string",
                        "example": "[]"
                    },
                    "createdAt": {
                        "title": "createdAt",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "cancelledAt": {
                        "title": "cancelledAt",
                        "description": "cancelled at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    },
                    "finishedAt": {
                        "title": "finishedAt",
                        "description": "finished at",
                        "type": "string",
                        "format": "datetime",
                        "example": "null"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Public IP Address Schema"
                }
            },
            "RemoveLoadBalancerRuleSchema": {
                "title": "Remove Load Balancer Rule",
                "description": "Remove Load Balancer Rule Schema",
                "properties": {
                    "headers": {
                        "title": "headers",
                        "description": "Header",
                        "type": "string",
                        "format": "object",
                        "example": "{}"
                    },
                    "exception": {
                        "title": "exception",
                        "description": "Exception",
                        "type": "string",
                        "example": "null"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Remove Load Balancer Rule"
                }
            },
            "UpdateLoadBalancerSchema": {
                "title": "Update Load Balancer",
                "description": "Load Balancer Schema",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "name",
                        "type": "string",
                        "example": "the name of the load balancer"
                    },
                    "protocol": {
                        "title": "protocol",
                        "description": "The protocol for the LB such as tcp, udp or tcp-proxy.",
                        "type": "string",
                        "example": "tcp"
                    },
                    "algorithm": {
                        "title": "algorithm",
                        "description": "load balancer algorithm (source, roundrobin, leastconn)",
                        "type": "string",
                        "example": "roundrobin"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "LoadBalancer"
                }
            },
            "UpgradeKuberntesSchema": {
                "title": "Firewall",
                "description": "Firewall Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "version": {
                        "title": "version",
                        "description": "version",
                        "type": "string",
                        "example": ""
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Firewall"
                }
            },
            "VpcSchema": {
                "title": "VPC",
                "description": "Vpc Schema",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-2049491379c0"
                    },
                    "account_id": {
                        "title": "account_id",
                        "description": "Account Id",
                        "type": "integer",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-204949137565"
                    },
                    "name": {
                        "title": "name",
                        "description": "host name for the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "VPC-1"
                    },
                    "description": {
                        "title": "description",
                        "description": "an optional user generated name for the virtual machine",
                        "type": "string",
                        "format": "string",
                        "example": "VPC description"
                    },
                    "project_id": {
                        "title": "project_id",
                        "description": "Project Id",
                        "type": "string",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-564575645632"
                    },
                    "zone_id": {
                        "title": "zone_id",
                        "description": "Zone Id",
                        "type": "string",
                        "format": "int64",
                        "example": "79552b97-a784-4f7f-8154-564575645632"
                    },
                    "default": {
                        "title": "default",
                        "description": "default",
                        "type": "string",
                        "format": "string",
                        "example": "true"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Vpc"
                }
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer YOUR TOKEN)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}
